@page "/table-page"
﻿@using System;
@using System.Linq;
@using System.IO;
@using System.Xml;
@using System.Xml.Linq;
@using System.Collections.Generic;
@inject IJSRuntime JsRuntime


<h3>Table Page</h3>

<EditForm Model="@tableForm" OnSubmit="@Handlesubmit">
    <InputSelect @bind-Value="@tableForm.DesiredState">
        <option>---------</option>
        @foreach (string state in @statesID) {
            <option value="@state">@state</option>
        }
    </InputSelect>
    <button type="submit">Submit</button>
</EditForm>

<table border="1">
    <thead>
        <tr>
            <th>Candidate</th>
            <th>Party</th>
            <th>Votes</th>
        </tr>
        @while (reader.Read()) {
            
        }
    </thead>
</table>

<!--make button toggle between divs with the different lists-->
<!--<button @onclick="MakeDistinct">Toggle Distinct</button>
<ul>
    @if (!@unique)
    {
        @while (reader.Read())
        {
            switch (reader.NodeType)
            {
                case XmlNodeType.Element:
                    if (reader.Name == "lastname")
                    {
                        IsLastName();
                    }
                    if (reader.Name == "candidates")
                    {
                        if (@reader.HasAttributes)
                        {
                            reader.GetAttribute(1);
                            reader.GetAttribute(0);
                        }
                    }
                    break;

                case XmlNodeType.Text:
                    if (@lastName)
                    {
                        <li>@party: @reader.Value (@votes votes)</li>
                    }
                    break;

                case XmlNodeType.EndElement:
                    if (reader.Name == "lastname")
                    {
                        IsNotLastName();
                    }
                    break;
                default:
                    break;
            }
        }
    } 
    else
    {
        @foreach (var node in @namesList)
        {
            <li>@node</li>
        }
    }
</ul>-->

@code {
    private XmlTextReader reader = new XmlTextReader("https://wwwlab.webug.se/examples/XML/electionservice/races/?mode=xml");
    private TableFormClass tableForm = new();
    private bool unique = false, lastName = false;
    private List<string> namesList = new List<string>();
    private string votes = "", party = "";
    private int amountOfStates = 0;
    List<string> statesID = new();
    protected override async Task OnInitializedAsync()
    {
        XmlDocument doc = new XmlDocument();
        doc.Load("https://wwwlab.webug.se/examples/XML/electionservice/races/?mode=xml");
        XmlElement root = doc.DocumentElement;
        XmlNodeList nodes = root.GetElementsByTagName("lastname");
        namesList = nodes.Cast<XmlNode>()
            .Select(node => node.InnerText)
            .Distinct()
            .OrderBy(x => x)
            .ToList();

        @while (reader.Read()) {
            if (reader.NodeType == XmlNodeType.Element && reader.Name == "race") {
                statesID.Add(reader.GetAttribute(0));
            }
        }
    }
    private async void Handlesubmit()
    {
        await JsRuntime.InvokeVoidAsync("alert", tableForm.DesiredState);
    }
    private void MakeDistinct() => unique = !unique;
    private void IsLastName() => lastName = true;
    private void IsNotLastName() => lastName = false;
}